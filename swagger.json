{
  "swagger": "2.0",
  "info": {
    "title": "My library API",
    "description": "An API for interacting with books and members informations.",
    "version": "1.0.0"
  },
  "host": "library-api-cuda.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "securityDefinitions": {
    "oAuthSample": {
      "type": "oauth2",
      "description": "This API uses OAuth 2 with the Authorization code grant flow",
      "authorizationUrl": "https://library-api-cuda.onrender.com/login",
      "flow": "authorizationCode",
      "scopes": {
        "write_books": "modify books in your account",
        "write_members": "modify members in your account"
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["Home"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": ["Authentication"],
        "description": "Endpoint to logout",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/books/": {
      "get": {
        "tags": ["Books"],
        "description": "Endpoint to get all Books",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "description": "Endpoint to create a specific Book",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a book",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Daily Stoic"
                },
                "author": {
                  "type": "string",
                  "example": "Ryan Holiday"
                },
                "genre": {
                  "type": "string",
                  "example": "Philosophy"
                },
                "publication_year": {
                  "type": "string",
                  "example": "2016"
                },
                "isbn": {
                  "type": "string",
                  "example": "978-0-7352-1173-5"
                },
                "available_copies": {
                  "type": "number",
                  "example": 10
                },
                "description": {
                  "type": "string",
                  "example": "It is about stoicism, an ancient philosophy teaching people how to live a good life"
                }
              },
              "required": [
                "title",
                "author",
                "genre",
                "publication_year",
                "isbn",
                "available_copies",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuthSample": ["write_books"]
          }
        ]
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Books"],
        "description": "Endpoint to get a specific Book",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "description": "Endpoint to update a specific Book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Add a Book",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Company of One"
                },
                "author": {
                  "type": "string",
                  "example": "Paul Jarvis"
                },
                "genre": {
                  "type": "string",
                  "example": "Business"
                },
                "publication_year": {
                  "type": "number",
                  "example": 2018
                },
                "isbn": {
                  "type": "string",
                  "example": "978-1-9848-5836-8"
                },
                "available_copies": {
                  "type": "number",
                  "example": 20
                },
                "description": {
                  "type": "string",
                  "example": "A book about the self-employment revolution"
                }
              },
              "required": [
                "title",
                "author",
                "genre",
                "publication_year",
                "isbn",
                "available_copies",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuthSample": ["write_books"]
          }
        ]
      },
      "delete": {
        "tags": ["Books"],
        "description": "Endpoint to delete a specific Book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuthSample": ["write_books"]
          }
        ]
      }
    },
    "/members/": {
      "get": {
        "tags": ["Members"],
        "description": "Endpoint to get all Members",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Members"],
        "description": "Endpoint to create a specific Member",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a Member",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Mike Bailey"
                },
                "email": {
                  "type": "string",
                  "example": "mike.bailey@example.com"
                },
                "membership_type": {
                  "type": "string",
                  "example": "Student"
                },
                "books_borrowed": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              },
              "required": ["name", "email", "membership_type", "books_borrowed"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuthSample": ["write_members"]
          }
        ]
      }
    },
    "/members/{id}": {
      "get": {
        "tags": ["Members"],
        "description": "Endpoint to get a specific Member",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Members"],
        "description": "Endpoint to update a specific Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Add a Member",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Victor Hugo"
                },
                "email": {
                  "type": "string",
                  "example": "victor.hugo@gmail.com"
                },
                "membership_type": {
                  "type": "string",
                  "example": "Administration"
                },
                "books_borrowed": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              },
              "required": ["name", "email", "membership_type", "books_borrowed"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuthSample": ["write_members"]
          }
        ]
      },
      "delete": {
        "tags": ["Members"],
        "description": "Endpoint to delete a specific Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuthSample": ["write_members"]
          }
        ]
      }
    }
  }
}
